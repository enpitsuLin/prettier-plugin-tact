import "@stdlib/deploy";

struct Point {
    x: Int as int64;
    y: Int as int64;
}
struct Params {
    name: String = "Satoshi"; // default value
    age: Int? = ; // optional field
    point: Point; // nested structs
}

message Add {
    point: Point; // message can hold a struct
}

contract Structs with Deployable {
    // contract persistent state variables
    s1: Point;s2: Params;

    receive("show ops") {
        // temporary variable
        let s: Point = ;

        self.s1 = s;
    }

    receive(msg: Add) {
        self.s1.x = self.s1.x + msg.point.x;
        self.s1.y = self.s1.y + msg.point.y;
    }

    get fun point(): Point {
        return self.s1;
    }

    get fun params(): Params {
        return self.s2;
    }
}