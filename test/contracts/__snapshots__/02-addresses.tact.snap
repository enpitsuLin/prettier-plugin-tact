import "@stdlib/deploy";

contract Addresses with Deployable {
     // contract persistent state variables
    // we have three representations of the same address
    a1: Address;// bouncable (same foundation wallet)
    a2: Address;// non-bounceable (same foundation wallet)
    a3: Address;
    a4: Address;a5: Address;a6: Address;

    receive("show all") {
        /// addresses cannot currently be dumped
        /// TODO: https://github.com/tact-lang/tact/issues/16
        /// dump(self.a1);
    }

    receive("show ops") {
        // temporary variable
        let a: Address = ;
        // bouncable (same foundation wallet)

        dump(a == self.a1);dump(a == self.a2);dump(a == self.a3);
        dump(a == self.a4);dump(a != self.a5);
    }

    get fun result(): Address {
        return self.a1;
    }
}