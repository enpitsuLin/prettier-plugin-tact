import "@stdlib/deploy";

contract Integers with Deployable {
     // contract persistent state variables
    // integers can be persisted in state in various sizes
    i1: Int as int257;// range -2^256 to 2^256 - 1 (takes 257 bit = 32 bytes + 1 bit)
    i2: Int as uint256;// range 0 to 2^256 - 1 (takes 256 bit = 32 bytes)
    i3: Int as int256;// range -2^255 to 2^255 - 1 (takes 256 bit = 32 bytes)
    i4: Int as uint128;// range 0 to 2^128 - 1 (takes 128 bit = 16 bytes)
    i5: Int as int128;// range -2^127 to 2^127 - 1 (takes 128 bit = 16 bytes)
    i6: Int as coins;// range 0 to 2^120 - 1 (takes 120 bit = 15 bytes)
    i7: Int as uint64;// range 0 to 18,446,744,073,709,551,615 (takes 64 bit = 8 bytes)
    i8: Int as int64;// range -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 (takes 64 bit = 8 bytes)
    i9: Int as uint32;// range 0 to 4,294,967,295 (takes 32 bit = 4 bytes)
    i10: Int as int32;// range -2,147,483,648 to 2,147,483,647 (takes 32 bit = 4 bytes)
    i11: Int as uint16;// range 0 to 65,535 (takes 16 bit = 2 bytes)
    i12: Int as int16;// range -32,768 to 32,767 (takes 16 bit = 2 bytes)
    i13: Int as uint8;// range 0 to 255 (takes 8 bit = 1 byte)
    i14: Int as int8;// range -128 to 127 (takes 8 bit = 1 byte)


    receive("show all") {
        dump(self.i1);dump(self.i2);dump(self.i3);dump(self.i4);dump(self.i5);dump(self.i6);dump(self.i7);dump(self.i8);
    }

    get fun result(): Int {
        return self.i1;
    }
}